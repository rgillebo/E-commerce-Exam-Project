{
  "swagger": "2.0",
  "info": {
    "title": "Noroff EP1 E-commerce API Documentation",
    "description": "API documentation for the project",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Guest",
      "description": "Guest operations"
    },
    {
      "name": "User",
      "description": "User operations"
    },
    {
      "name": "Admin",
      "description": "Admin operations"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter JWT token in the format: Bearer <token>"
    }
  },
  "paths": {
    "/admin/login": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to render the admin login page",
        "responses": {
          "200": {
            "description": "Login page rendered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Login page rendered successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint for admin login",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Admin login credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "admin"
                },
                "password": {
                  "type": "string",
                  "example": "P@ssword2023"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Login successful. Redirecting to products page..."
                },
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Invalid credentials"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/logout": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint for admin logout",
        "responses": {
          "200": {
            "description": "Successful logout",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Logout successful. Redirecting to login page..."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/admin/": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to render the admin dashboard page",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Admin dashboard rendered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Admin dashboard rendered successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/products": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to get all products",
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Products retrieved successfully"
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Product"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to add a new product",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Product data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Product created successfully"
                    },
                    "product": {
                      "$ref": "#/definitions/Product"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/products/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to get product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Product ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Product retrieved successfully"
                    },
                    "product": {
                      "$ref": "#/definitions/Product"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to update product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Product ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Updated product data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Product updated successfully"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to delete product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Product ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Product deleted successfully"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/products/{id}/status": {
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to update product status by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Product ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Product status data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_deleted": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product status updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Product status updated successfully"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/brands": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to get all brands",
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Brands retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Brands retrieved successfully"
                    },
                    "brands": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Brand"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to add a new brand",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Brand data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brand created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Brand created successfully"
                    },
                    "brand": {
                      "$ref": "#/definitions/Brand"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/brands/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to get brand by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Brand ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Brand retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Brand retrieved successfully"
                    },
                    "brand": {
                      "$ref": "#/definitions/Brand"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Brand not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Brand not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to update brand by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Brand ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Updated brand data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brand updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Brand updated successfully"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Brand not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Brand not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to delete brand by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Brand ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Brand deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Brand deleted successfully"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Brand not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Brand not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/categories": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to get all categories",
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Categories retrieved successfully"
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Category"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to add a new category",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Category data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Category created successfully"
                    },
                    "category": {
                      "$ref": "#/definitions/Category"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/categories/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to get category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Category ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Category retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Category retrieved successfully"
                    },
                    "category": {
                      "$ref": "#/definitions/Category"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Category not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to update category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Category ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Updated category data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Category updated successfully"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Category not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to delete category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Category ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Category deleted successfully"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Category not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/roles": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to get all roles",
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Roles retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Roles retrieved successfully"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Role"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to get all users",
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Users retrieved successfully"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/User"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/users/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "User retrieved successfully"
                    },
                    "user": {
                      "$ref": "#/definitions/User"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to update user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "User ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Updated user data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "User updated successfully"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/orders": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to get all orders",
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Orders retrieved successfully"
                    },
                    "orders": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Order"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/orders/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to get order by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Order ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Order retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Order retrieved successfully"
                    },
                    "order": {
                      "$ref": "#/definitions/Order"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Order not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Order not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/orders/{id}/status": {
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to update order status by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Order ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Order status data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order status updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Order status updated successfully"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Order not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Order not found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/products/search": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to search products by name, category, or brand",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Search query and filter",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "example": "string"
                },
                "filter": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Products retrieved successfully"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Product"
                      }
                    },
                    "count": {
                      "type": "string",
                      "example": "integer"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/orders/search": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to search orders by user and status",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Search query and filter",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "example": "string"
                },
                "filter": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Orders retrieved successfully"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Order"
                      }
                    },
                    "count": {
                      "type": "string",
                      "example": "integer"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Guest",
          "User"
        ],
        "description": "Endpoint to get all products",
        "responses": {
          "200": {
            "description": "Successful retrieval of products",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Products found"
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Product name"
                          },
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "description": {
                            "type": "string",
                            "example": "Product description"
                          },
                          "unitprice": {
                            "type": "number",
                            "example": 100
                          },
                          "discount": {
                            "type": "number",
                            "example": 10
                          },
                          "date_added": {
                            "type": "string",
                            "example": "2023-06-10"
                          },
                          "quantity": {
                            "type": "number",
                            "example": 10
                          },
                          "isdeleted": {
                            "type": "boolean",
                            "example": false
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2023-06-10T00:00:00Z"
                          },
                          "BrandId": {
                            "type": "number",
                            "example": 1
                          },
                          "CategoryId": {
                            "type": "number",
                            "example": 1
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    },
                    "products": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Guest",
          "User"
        ],
        "description": "Endpoint to get a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of product",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Product found"
                    },
                    "products": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Product name"
                        },
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "description": {
                          "type": "string",
                          "example": "Product description"
                        },
                        "unitprice": {
                          "type": "number",
                          "example": 100
                        },
                        "discount": {
                          "type": "number",
                          "example": 10
                        },
                        "date_added": {
                          "type": "string",
                          "example": "2023-06-10"
                        },
                        "quantity": {
                          "type": "number",
                          "example": 10
                        },
                        "isdeleted": {
                          "type": "boolean",
                          "example": false
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-06-10T00:00:00Z"
                        },
                        "BrandId": {
                          "type": "number",
                          "example": 1
                        },
                        "CategoryId": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Product not found"
                    },
                    "products": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    },
                    "products": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Guest",
          "User"
        ],
        "description": "Endpoint to get all categories",
        "responses": {
          "200": {
            "description": "Successful retrieval of categories",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Categories found"
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "Category name"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2023-06-10T00:00:00Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2023-06-10T00:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    },
                    "categories": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "Guest",
          "User"
        ],
        "description": "Endpoint to get a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Category ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of category",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Category found"
                    },
                    "category": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Category name"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-06-10T00:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-06-10T00:00:00Z"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Category not found"
                    },
                    "category": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    },
                    "category": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/brands": {
      "get": {
        "tags": [
          "Guest",
          "User"
        ],
        "description": "Endpoint to get all brands",
        "responses": {
          "200": {
            "description": "Successful retrieval of brands",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Brands found"
                    },
                    "brands": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "Brand name"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2023-06-10T00:00:00Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2023-06-10T00:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    },
                    "brands": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/brands/{id}": {
      "get": {
        "tags": [
          "Guest",
          "User"
        ],
        "description": "Endpoint to get a brand by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Brand ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of brand",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Brand found"
                    },
                    "brand": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Brand name"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-06-10T00:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-06-10T00:00:00Z"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Brand not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Brand not found"
                    },
                    "brand": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    },
                    "brand": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/membership": {
      "get": {
        "tags": [
          "Guest",
          "User"
        ],
        "description": "Endpoint to get all membership statuses",
        "responses": {
          "200": {
            "description": "Successful retrieval of memberships",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Memberships found"
                    },
                    "memberships": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "status": {
                            "type": "string",
                            "example": "Bronze"
                          },
                          "discount": {
                            "type": "number",
                            "example": 5
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2023-06-10T00:00:00Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2023-06-10T00:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    },
                    "memberships": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/membership/{id}": {
      "get": {
        "tags": [
          "Guest",
          "User"
        ],
        "description": "Endpoint to get a membership status by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Membership ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of membership",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Membership found"
                    },
                    "membership": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "status": {
                          "type": "string",
                          "example": "Bronze"
                        },
                        "discount": {
                          "type": "number",
                          "example": 5
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-06-10T00:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-06-10T00:00:00Z"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Membership not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Membership not found"
                    },
                    "membership": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    },
                    "membership": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/membership/update/{userId}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to update membership status based on purchases",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the user to update membership status for"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Membership status updated",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Membership status updated"
                    },
                    "membership_status": {
                      "type": "string",
                      "example": "Gold"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "User not found"
                    },
                    "membership_status": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Internal server error message"
                    },
                    "membership_status": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Guest"
        ],
        "description": "Endpoint to register a new user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User registration details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string",
                  "example": "Test"
                },
                "lastname": {
                  "type": "string",
                  "example": "User"
                },
                "username": {
                  "type": "string",
                  "example": "testuser"
                },
                "email": {
                  "type": "string",
                  "example": "testuser@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "securepassword"
                },
                "address": {
                  "type": "string",
                  "example": "Stormwind 123"
                },
                "telephonenumber": {
                  "type": "string",
                  "example": "911"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully registered",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 201
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "firstname": {
                          "type": "string",
                          "example": "Test"
                        },
                        "lastname": {
                          "type": "string",
                          "example": "User"
                        },
                        "username": {
                          "type": "string",
                          "example": "testuser"
                        },
                        "email": {
                          "type": "string",
                          "example": "testuser@example.com"
                        },
                        "address": {
                          "type": "string",
                          "example": "Stormwind 123"
                        },
                        "telephonenumber": {
                          "type": "string",
                          "example": "911"
                        },
                        "role_id": {
                          "type": "number",
                          "example": 2
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-06-10T00:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-06-10T00:00:00Z"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 400
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "All fields are required / Invalid email address / Username or email already taken"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Guest"
        ],
        "description": "Endpoint for user login",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User login credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "example": "testuser"
                },
                "password": {
                  "type": "string",
                  "example": "securepassword"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "You are logged in"
                    },
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "email": {
                      "type": "string",
                      "example": "testuser@example.com"
                    },
                    "name": {
                      "type": "string",
                      "example": "Test User"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 401
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Invalid credentials"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/utility/init": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to initialize the database",
        "responses": {
          "200": {
            "description": "Database successfully populated",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Database successfully populated"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Database is already populated",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Database is already populated"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint for browser access to initialize the database",
        "responses": {
          "200": {
            "description": "Form for initializing the database rendered successfully",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "<form method=\"POST\" action=\"/utility/init\"><button type=\"submit\">Initialize Database</button></form>"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal server error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/search": {
      "post": {
        "tags": [
          "Guest",
          "User"
        ],
        "description": "Endpoint for searching products",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Search query and filter type",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "example": "apple"
                },
                "filter": {
                  "type": "string",
                  "example": "brand"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Products found"
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Product Name"
                          },
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "description": {
                            "type": "string",
                            "example": "Product Description"
                          },
                          "unitprice": {
                            "type": "number",
                            "example": 100
                          },
                          "quantity": {
                            "type": "number",
                            "example": 10
                          },
                          "isdeleted": {
                            "type": "boolean",
                            "example": false
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2023-06-01T00:00:00.000Z"
                          },
                          "brand": {
                            "type": "string",
                            "example": "Brand Name"
                          },
                          "category": {
                            "type": "string",
                            "example": "Category Name"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 400
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Query and filter are required."
                    },
                    "products": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "No products found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "No products found"
                    },
                    "products": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "products": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/cart": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to add a product to the cart",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Product ID and quantity",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "number",
                  "example": 1
                },
                "quantity": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product added to cart",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 201
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Product added to cart"
                    },
                    "cartItem": {
                      "type": "object",
                      "properties": {
                        "cart_id": {
                          "type": "number",
                          "example": 1
                        },
                        "product_id": {
                          "type": "number",
                          "example": 1
                        },
                        "quantity": {
                          "type": "number",
                          "example": 2
                        },
                        "unit_price": {
                          "type": "number",
                          "example": 100
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 400
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to view cart items",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart items retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Cart items retrieved"
                    },
                    "cart": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "user_id": {
                          "type": "number",
                          "example": 1
                        },
                        "checked_out": {
                          "type": "boolean",
                          "example": false
                        },
                        "CartItems": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "example": 1
                              },
                              "cart_id": {
                                "type": "number",
                                "example": 1
                              },
                              "product_id": {
                                "type": "number",
                                "example": 1
                              },
                              "quantity": {
                                "type": "number",
                                "example": 2
                              },
                              "unit_price": {
                                "type": "number",
                                "example": 100
                              },
                              "Product": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Product Name"
                                  },
                                  "description": {
                                    "type": "string",
                                    "example": "Product Description"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to update cart item quantity",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Cart ID, Cart Item ID, and quantity",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cart_id": {
                  "type": "number",
                  "example": 1
                },
                "cart_item_id": {
                  "type": "number",
                  "example": 1
                },
                "quantity": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart item quantity updated",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Cart item quantity updated"
                    },
                    "cartItem": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "cart_id": {
                          "type": "number",
                          "example": 1
                        },
                        "product_id": {
                          "type": "number",
                          "example": 1
                        },
                        "quantity": {
                          "type": "number",
                          "example": 2
                        },
                        "unit_price": {
                          "type": "number",
                          "example": 100
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 400
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to remove an item from the cart",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Cart ID and Cart Item ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cart_id": {
                  "type": "number",
                  "example": 1
                },
                "cart_item_id": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart item removed (soft delete)",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Cart item removed (soft delete)"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/cart/checkout/now": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to checkout the cart",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart checked out successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Cart checked out successfully"
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "user_id": {
                          "type": "number",
                          "example": 1
                        },
                        "status": {
                          "type": "string",
                          "example": "In progress"
                        },
                        "discount": {
                          "type": "number",
                          "example": 0
                        },
                        "order_number": {
                          "type": "string",
                          "example": "abcdefgh"
                        },
                        "membership_status": {
                          "type": "string",
                          "example": "Bronze"
                        }
                      }
                    },
                    "totalAmount": {
                      "type": "number",
                      "example": 100
                    },
                    "discountAmount": {
                      "type": "number",
                      "example": 0
                    },
                    "finalAmount": {
                      "type": "number",
                      "example": 100
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 400
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get all orders for the logged in user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Orders found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Orders found"
                    },
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "status": {
                            "type": "string",
                            "example": "In progress"
                          },
                          "order_number": {
                            "type": "string",
                            "example": "abcdefgh"
                          },
                          "discount": {
                            "type": "number",
                            "example": 0
                          },
                          "membership_status": {
                            "type": "string",
                            "example": "Bronze"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2023-01-01T00:00:00.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2023-01-01T00:00:00.000Z"
                          },
                          "OrderItems": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "example": 1
                                },
                                "product_id": {
                                  "type": "number",
                                  "example": 1
                                },
                                "quantity": {
                                  "type": "number",
                                  "example": 2
                                },
                                "unit_price": {
                                  "type": "number",
                                  "example": 100
                                },
                                "Product": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "example": 1
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Product Name"
                                    },
                                    "description": {
                                      "type": "string",
                                      "example": "Product Description"
                                    },
                                    "price": {
                                      "type": "number",
                                      "example": 100
                                    },
                                    "category_id": {
                                      "type": "number",
                                      "example": 1
                                    },
                                    "brand_id": {
                                      "type": "number",
                                      "example": 1
                                    },
                                    "quantity": {
                                      "type": "number",
                                      "example": 10
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "example": "2023-01-01T00:00:00.000Z"
                                    },
                                    "updatedAt": {
                                      "type": "string",
                                      "example": "2023-01-01T00:00:00.000Z"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No orders found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "No orders found"
                    },
                    "orders": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    },
                    "orders": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get an order by ID for the logged in user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Order ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Order found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "statuscode": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Order found"
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "status": {
                          "type": "string",
                          "example": "In progress"
                        },
                        "order_number": {
                          "type": "string",
                          "example": "abcdefgh"
                        },
                        "discount": {
                          "type": "number",
                          "example": 0
                        },
                        "membership_status": {
                          "type": "string",
                          "example": "Bronze"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-01-01T00:00:00.000Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-01-01T00:00:00.000Z"
                        },
                        "OrderItems": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "example": 1
                              },
                              "product_id": {
                                "type": "number",
                                "example": 1
                              },
                              "quantity": {
                                "type": "number",
                                "example": 2
                              },
                              "unit_price": {
                                "type": "number",
                                "example": 100
                              },
                              "Product": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Product Name"
                                  },
                                  "description": {
                                    "type": "string",
                                    "example": "Product Description"
                                  },
                                  "price": {
                                    "type": "number",
                                    "example": 100
                                  },
                                  "category_id": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "brand_id": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "quantity": {
                                    "type": "number",
                                    "example": 10
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2023-01-01T00:00:00.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2023-01-01T00:00:00.000Z"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Order not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 404
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Order not found"
                    },
                    "order": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "statuscode": {
                  "type": "number",
                  "example": 500
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Error message"
                    },
                    "order": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Sample Product"
        },
        "description": {
          "type": "string",
          "example": "Product description"
        },
        "price": {
          "type": "number",
          "example": 100
        },
        "category_id": {
          "type": "number",
          "example": 1
        },
        "brand_id": {
          "type": "number",
          "example": 1
        },
        "quantity": {
          "type": "number",
          "example": 10
        },
        "is_deleted": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Sample Category"
        }
      }
    },
    "Brand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Sample Brand"
        }
      }
    },
    "Membership": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Sample Membership"
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "1"
        },
        "name": {
          "type": "string",
          "example": "Admin"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "example": "Test"
        },
        "lastname": {
          "type": "string",
          "example": "User"
        },
        "username": {
          "type": "string",
          "example": "testuser"
        },
        "email": {
          "type": "string",
          "example": "testuser@example.com"
        },
        "password": {
          "type": "string",
          "example": "securepassword"
        },
        "address": {
          "type": "string",
          "example": "Stormwind 123"
        },
        "telephonenumber": {
          "type": "string",
          "example": "911"
        }
      }
    },
    "Utility": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Sample Utility"
        }
      }
    },
    "Search": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "example": "apple"
        },
        "filter": {
          "type": "string",
          "example": "name"
        }
      }
    },
    "Cart": {
      "type": "object",
      "properties": {
        "product_id": {
          "type": "number",
          "example": 1
        },
        "quantity": {
          "type": "number",
          "example": 2
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "In progress"
        },
        "order_number": {
          "type": "string",
          "example": "abcdefgh"
        },
        "discount": {
          "type": "number",
          "example": 0
        }
      }
    }
  }
}